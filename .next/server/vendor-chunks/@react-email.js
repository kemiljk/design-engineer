"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-email";
exports.ids = ["vendor-chunks/@react-email"];
exports.modules = {

/***/ "(rsc)/./node_modules/@react-email/render/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@react-email/render/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   plainTextSelectors: () => (/* binding */ plainTextSelectors),\n/* harmony export */   render: () => (/* binding */ render),\n/* harmony export */   renderAsync: () => (/* binding */ renderAsync)\n/* harmony export */ });\n/* harmony import */ var react_dom_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dom/server */ \"(rsc)/./node_modules/next/dist/compiled/react-dom/server.js\");\n/* harmony import */ var html_to_text__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! html-to-text */ \"(rsc)/./node_modules/html-to-text/lib/html-to-text.mjs\");\n/* harmony import */ var js_beautify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! js-beautify */ \"(rsc)/./node_modules/js-beautify/js/index.js\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __knownSymbol = (name, symbol)=>{\n    if (symbol = Symbol[name]) return symbol;\n    throw Error(\"Symbol.\" + name + \" is not defined\");\n};\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)){\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    }\n    return a;\n};\nvar __async = (__this, __arguments, generator)=>{\n    return new Promise((resolve, reject)=>{\n        var fulfilled = (value)=>{\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var rejected = (value)=>{\n            try {\n                step(generator.throw(value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var step = (x)=>x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n        step((generator = generator.apply(__this, __arguments)).next());\n    });\n};\nvar __forAwait = (obj, it, method)=>(it = obj[__knownSymbol(\"asyncIterator\")]) ? it.call(obj) : (obj = obj[__knownSymbol(\"iterator\")](), it = {}, method = (key, fn)=>(fn = obj[key]) && (it[key] = (arg)=>new Promise((yes, no, done)=>(arg = fn.call(obj, arg), done = arg.done, Promise.resolve(arg.value).then((value)=>yes({\n                        value,\n                        done\n                    }), no)))), method(\"next\"), method(\"return\"), it);\n// src/render.ts\n\n\n// src/utils/pretty.ts\n\nvar defaults = {\n    unformatted: [\n        \"code\",\n        \"pre\",\n        \"em\",\n        \"strong\",\n        \"span\"\n    ],\n    indent_inner_html: true,\n    indent_char: \" \",\n    indent_size: 2,\n    sep: \"\\n\"\n};\nvar pretty = (str, options = {})=>{\n    return js_beautify__WEBPACK_IMPORTED_MODULE_2__.html(str, __spreadValues(__spreadValues({}, defaults), options));\n};\n// src/plain-text-selectors.ts\nvar plainTextSelectors = [\n    {\n        selector: \"img\",\n        format: \"skip\"\n    },\n    {\n        selector: \"#__react-email-preview\",\n        format: \"skip\"\n    },\n    {\n        selector: \"a\",\n        options: {\n            linkBrackets: false\n        }\n    }\n];\n// src/render.ts\nvar render = (component, options)=>{\n    if (options == null ? void 0 : options.plainText) {\n        return renderAsPlainText(component, options);\n    }\n    const doctype = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">';\n    const markup = react_dom_server__WEBPACK_IMPORTED_MODULE_0__.renderToStaticMarkup(component);\n    const document = `${doctype}${markup}`;\n    if (options && options.pretty) {\n        return pretty(document);\n    }\n    return document;\n};\nvar renderAsPlainText = (component, options)=>{\n    return (0,html_to_text__WEBPACK_IMPORTED_MODULE_1__.convert)(react_dom_server__WEBPACK_IMPORTED_MODULE_0__.renderToStaticMarkup(component), __spreadValues({\n        selectors: plainTextSelectors\n    }, (options == null ? void 0 : options.plainText) === true ? options.htmlToTextOptions : {}));\n};\n// src/render-async.ts\n\nvar decoder = new TextDecoder(\"utf-8\");\nvar readStream = (readableStream)=>__async(void 0, null, function*() {\n        let result = \"\";\n        if (\"allReady\" in readableStream) {\n            const reader = readableStream.getReader();\n            while(true){\n                const { value, done } = yield reader.read();\n                if (done) {\n                    break;\n                }\n                result += decoder.decode(value);\n            }\n        } else {\n            try {\n                for(var iter = __forAwait(readableStream), more, temp, error; more = !(temp = yield iter.next()).done; more = false){\n                    const chunk = temp.value;\n                    result += decoder.decode(Buffer.from(chunk));\n                }\n            } catch (temp) {\n                error = [\n                    temp\n                ];\n            } finally{\n                try {\n                    more && (temp = iter.return) && (yield temp.call(iter));\n                } finally{\n                    if (error) throw error[0];\n                }\n            }\n        }\n        return result;\n    });\nvar renderAsync = (component, options)=>__async(void 0, null, function*() {\n        var _a;\n        const reactDOMServer = (yield Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! react-dom/server */ \"(rsc)/./node_modules/next/dist/compiled/react-dom/server.js\", 19))).default;\n        const renderToStream = (_a = reactDOMServer.renderToReadableStream) != null ? _a : reactDOMServer.renderToStaticNodeStream;\n        const doctype = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">';\n        const htmlOrReadableStream = yield renderToStream(component);\n        const html = typeof htmlOrReadableStream === \"string\" ? htmlOrReadableStream : yield readStream(htmlOrReadableStream);\n        if (options == null ? void 0 : options.plainText) {\n            return (0,html_to_text__WEBPACK_IMPORTED_MODULE_1__.convert)(html, __spreadValues({\n                selectors: plainTextSelectors\n            }, options.htmlToTextOptions));\n        }\n        const document = `${doctype}${html}`;\n        if (options == null ? void 0 : options.pretty) {\n            return pretty(document);\n        }\n        return document;\n    });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@react-email/render/dist/index.mjs\n");

/***/ })

};
;
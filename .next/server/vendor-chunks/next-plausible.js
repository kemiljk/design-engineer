"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/next-plausible";
exports.ids = ["vendor-chunks/next-plausible"];
exports.modules = {

/***/ "(rsc)/./node_modules/next-plausible/dist/index.esm.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-plausible/dist/index.esm.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PlausibleProvider),\n/* harmony export */   usePlausible: () => (/* binding */ usePlausible),\n/* harmony export */   withPlausibleProxy: () => (/* binding */ withPlausibleProxy)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_script__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/script */ \"(rsc)/./node_modules/next/script.js\");\n/* harmony import */ var next_script__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_script__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction usePlausible() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function(eventName, ...rest) {\n        var _a, _b;\n        return (_b = (_a = window).plausible) === null || _b === void 0 ? void 0 : _b.call(_a, eventName, rest[0]);\n    }, []);\n}\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ function __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction getCombinations(elements) {\n    const combinations = [];\n    for(let i = 0; i < elements.length; i++){\n        combinations.push([\n            elements[i]\n        ]);\n        if (i < elements.length - 1) {\n            getCombinations(elements.slice(i + 1)).forEach((combination)=>{\n                combinations.push([\n                    elements[i],\n                    ...combination\n                ]);\n            });\n        }\n    }\n    return combinations;\n}\nconst allModifiers = [\n    \"exclusions\",\n    \"local\",\n    \"manual\",\n    \"outbound-links\",\n    \"file-downloads\",\n    \"tagged-events\",\n    \"pageview-props\",\n    \"revenue\",\n    \"hash\"\n];\nconst getScriptPath = (options, ...modifiers)=>{\n    var _a, _b;\n    let basePath = (_a = options.basePath) !== null && _a !== void 0 ? _a : \"\";\n    if (options.subdirectory) {\n        basePath += `/${options.subdirectory}`;\n    }\n    return `${basePath}/js/${[\n        (_b = options.scriptName) !== null && _b !== void 0 ? _b : \"script\",\n        ...modifiers.sort().filter((modifier)=>modifier !== null)\n    ].join(\".\")}.js`;\n};\nconst plausibleDomain = \"https://plausible.io\";\nconst getRemoteScriptName = (selfHosted)=>selfHosted ? \"plausible\" : \"script\";\nconst getDomain = (options)=>{\n    var _a;\n    return (_a = options.customDomain) !== null && _a !== void 0 ? _a : plausibleDomain;\n};\nconst getApiEndpoint = (options)=>{\n    var _a, _b;\n    return `${(_a = options.basePath) !== null && _a !== void 0 ? _a : \"\"}/${(_b = options.subdirectory) !== null && _b !== void 0 ? _b : \"proxy\"}/api/event${options.trailingSlash ? \"/\" : \"\"}`;\n};\nfunction withPlausibleProxy(options = {}) {\n    return (nextConfig)=>{\n        const nextPlausiblePublicProxyOptions = Object.assign(Object.assign({}, options), {\n            trailingSlash: !!nextConfig.trailingSlash,\n            basePath: nextConfig.basePath\n        });\n        const nextPlausibleEnv = {\n            next_plausible_proxy: \"true\",\n            next_plausible_trailingSlash: nextPlausiblePublicProxyOptions.trailingSlash ? \"true\" : undefined,\n            next_plausible_basePath: nextPlausiblePublicProxyOptions.basePath,\n            next_plausible_customDomain: nextPlausiblePublicProxyOptions.customDomain,\n            next_plausible_scriptName: nextPlausiblePublicProxyOptions.scriptName,\n            next_plausible_subdirectory: nextPlausiblePublicProxyOptions.subdirectory\n        };\n        return Object.assign(Object.assign({}, nextConfig), {\n            env: Object.assign(Object.assign({}, nextConfig.env), Object.fromEntries(Object.entries(nextPlausibleEnv).filter(([_, value])=>value !== undefined))),\n            rewrites: ()=>__awaiter(this, void 0, void 0, function*() {\n                    var _a;\n                    const domain = getDomain(options);\n                    const getRemoteScript = (...modifiers)=>{\n                        var _a;\n                        return ((_a = process.env.NEXT_PLAUSIBLE_TEST_DOMAIN) !== null && _a !== void 0 ? _a : domain) + getScriptPath({\n                            scriptName: getRemoteScriptName(domain !== plausibleDomain)\n                        }, ...modifiers);\n                    };\n                    const plausibleRewrites = [\n                        {\n                            source: getScriptPath(options),\n                            destination: getRemoteScript()\n                        },\n                        ...getCombinations(allModifiers).map((modifiers)=>({\n                                source: getScriptPath(options, ...modifiers),\n                                destination: getRemoteScript(...modifiers)\n                            })),\n                        {\n                            source: getApiEndpoint(Object.assign(Object.assign({}, nextPlausiblePublicProxyOptions), {\n                                basePath: \"\"\n                            })),\n                            destination: `${domain}/api/event`\n                        }\n                    ];\n                    if (process.env.NEXT_PLAUSIBLE_DEBUG) {\n                        console.log(\"plausibleRewrites = \", plausibleRewrites);\n                    }\n                    const rewrites = yield (_a = nextConfig.rewrites) === null || _a === void 0 ? void 0 : _a.call(nextConfig);\n                    if (!rewrites) {\n                        return plausibleRewrites;\n                    } else if (Array.isArray(rewrites)) {\n                        return rewrites.concat(plausibleRewrites);\n                    } else if (rewrites.afterFiles) {\n                        rewrites.afterFiles = rewrites.afterFiles.concat(plausibleRewrites);\n                        return rewrites;\n                    } else {\n                        rewrites.afterFiles = plausibleRewrites;\n                        return rewrites;\n                    }\n                })\n        });\n    };\n}\nfunction PlausibleProvider(props) {\n    var _a;\n    const { enabled =  false && (0) } = props;\n    const proxyOptions = process.env.next_plausible_proxy ? {\n        trailingSlash: process.env.next_plausible_trailingSlash === \"true\",\n        basePath: process.env.next_plausible_basePath,\n        customDomain: process.env.next_plausible_customDomain,\n        scriptName: process.env.next_plausible_scriptName,\n        subdirectory: process.env.next_plausible_subdirectory\n    } : undefined;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, enabled && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_script__WEBPACK_IMPORTED_MODULE_1___default()), Object.assign({\n        async: true,\n        defer: true,\n        \"data-api\": proxyOptions ? getApiEndpoint(proxyOptions) : undefined,\n        \"data-domain\": props.domain,\n        \"data-exclude\": props.exclude,\n        src: (proxyOptions ? \"\" : getDomain(props)) + getScriptPath(Object.assign(Object.assign({}, proxyOptions), {\n            scriptName: proxyOptions ? proxyOptions.scriptName : getRemoteScriptName(props.selfHosted)\n        }), props.trackLocalhost ? \"local\" : null, props.manualPageviews ? \"manual\" : null, props.pageviewProps ? \"pageview-props\" : null, props.trackOutboundLinks ? \"outbound-links\" : null, props.exclude ? \"exclusions\" : null, props.revenue ? \"revenue\" : null, props.trackFileDownloads ? \"file-downloads\" : null, props.taggedEvents ? \"tagged-events\" : null, props.hash ? \"hash\" : null),\n        integrity: props.integrity,\n        crossOrigin: props.integrity ? \"anonymous\" : undefined\n    }, typeof props.pageviewProps === \"object\" ? Object.fromEntries(Object.entries(props.pageviewProps).map(([k, v])=>[\n            `event-${k}`,\n            v\n        ])) : undefined, props.scriptProps)), enabled && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((next_script__WEBPACK_IMPORTED_MODULE_1___default()), {\n        id: \"next-plausible-init\",\n        dangerouslySetInnerHTML: {\n            __html: `window.plausible = window.plausible || function() { (window.plausible.q = window.plausible.q || []).push(arguments) }`\n        },\n        nonce: (_a = props.scriptProps) === null || _a === void 0 ? void 0 : _a.nonce\n    }), props.children);\n}\n //# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-plausible/dist/index.esm.js\n");

/***/ })

};
;